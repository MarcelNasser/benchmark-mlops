version: "3.5"

services:
  ml:
    container_name: ml
    extends:
      service: .mlflow-s3
      file: template.yml
    ports:
      - "5000:5000"
    extra_hosts:
      - "minio:172.19.0.4"
      - "postgres:172.19.0.3"
    networks:
      mlflow-subnet:
        ipv4_address: 172.19.0.2
    depends_on: [ pg, s3 ]
    environment:
      S3: "s3://ml-artifacts/mlflow"
      MLFLOW_S3_ENDPOINT_URL: "http://minio:9000"
      DB: "postgresql://postgres:postgres@postgres:5432/postgres"

  pg:
    extends:
      service: .db
      file: template.yml
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      mlflow-subnet:
        ipv4_address: 172.19.0.3

  s3:
    hostname: minio
    container_name: minio
    image: quay.io/minio/minio
    ports:
      - "9001:9001"
      - "9000:9000"
    environment:
      MINIO_ROOT_USER: minio-access-key
      MINIO_ROOT_PASSWORD: minio-secret-key
    volumes:
      - "s3:/data"
    networks:
      mlflow-subnet:
        ipv4_address: 172.19.0.4
    command: ["server", "/data --console-address ':9001'"]

networks:
  mlflow-subnet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/24

volumes:
  db:
  s3:
